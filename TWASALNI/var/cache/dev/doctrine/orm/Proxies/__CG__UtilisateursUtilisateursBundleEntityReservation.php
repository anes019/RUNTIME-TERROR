<?php

namespace Proxies\__CG__\Utilisateurs\UtilisateursBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reservation extends \Utilisateurs\UtilisateursBundle\Entity\Reservation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'pointAchat', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'destination', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'date', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'prix', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'listAchats', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'remarques', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'client', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'partenaire', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'etat'];
        }

        return ['__isInitialized__', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'pointAchat', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'destination', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'date', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'prix', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'listAchats', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'remarques', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'client', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'partenaire', '' . "\0" . 'Utilisateurs\\UtilisateursBundle\\Entity\\Reservation' . "\0" . 'etat'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reservation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPointAchat($pointAchat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPointAchat', [$pointAchat]);

        return parent::setPointAchat($pointAchat);
    }

    /**
     * {@inheritDoc}
     */
    public function getPointAchat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointAchat', []);

        return parent::getPointAchat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestination($destination)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestination', [$destination]);

        return parent::setDestination($destination);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestination()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestination', []);

        return parent::getDestination();
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix($prix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getListAchats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListAchats', []);

        return parent::getListAchats();
    }

    /**
     * {@inheritDoc}
     */
    public function setListAchats($listAchats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setListAchats', [$listAchats]);

        return parent::setListAchats($listAchats);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarques()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarques', []);

        return parent::getRemarques();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarques($remarques)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarques', [$remarques]);

        return parent::setRemarques($remarques);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', []);

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient($client)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', [$client]);

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaire', []);

        return parent::getPartenaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaire($partenaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaire', [$partenaire]);

        return parent::setPartenaire($partenaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

}
