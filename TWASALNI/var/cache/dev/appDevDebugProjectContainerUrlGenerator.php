<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::AddReclammationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_Listereclammation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::ListeReclammationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/reclammation/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_delete_reclammation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::DeleteReclammationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/reclammation/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_reponse_reclammation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::ReponseReclammationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/reclammation/reponse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_envoyer_reponse' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::EnvoyerRenponseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/reclammation/enoieReponse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_tri_reclammation' => array (  0 =>   array (    0 => 'etat',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::TrierParEtatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'etat',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/reclammation/TrierParEtat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_ordre_croissant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::OrdreCroissantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/reclammation/listeC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_ordre_decroissant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::OrdreDecroissantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/reclammation/listeD',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_statistiques' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::StatistiquesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/statistique',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_taxi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::listeTaxiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/taxi/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_detail_taxi' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::DetailTaxiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/taxi/detail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_evaluer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::EvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/evaluer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_commenter_part' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::CommenterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/commenter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_liste_rating' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::ListeEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/rating/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_delete_commentaire' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::DeleteCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/rating/commentaire/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_delete_rate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::DeleteRateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/rating/rate/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_reclammation_etat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\DefaultController::TrierParEtatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/reclammation/trietat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'feed_back_rate_star' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FeedBackBundle\\Controller\\RatingController::FindByStarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/feedback/rating/trie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_testpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DefaultController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/reservation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_archive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::listarchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/reservation/archive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_showarchive' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::showarchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showarchive',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_rejet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::rejetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rejet',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_archiver' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::archiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/archiver',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_restaurer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::restoreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/restaurer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_partenaire_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/partenaire/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/partenaire/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_mdp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::changeMdpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mdp',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_liste_Front' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::ListeFrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/partenaire/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'partenaire_detail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::DetailPartenaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/partenaire/partenaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/taxi/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_indexFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::indexFrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/taxi/taxiFront',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_detailTaxi' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::detailTaxiFrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/taxi/taxi/detail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/taxi/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taxi_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\TaxiController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/taxi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\ReservationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'utilisateurs_utilisateurs_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'course_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CoursesController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/createCourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'course_read' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CoursesController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/readCourses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'course_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CoursesController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deleteCourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'course_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CoursesController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/updateCourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_read' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/readInventaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_readArchive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireController::archiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/readInventaireArchive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_readArchivereservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireRController::archiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/readInventaireReservationArchive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_notdone' => array (  0 =>   array (    0 => 'id',    1 => 'partenaire_id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireRController::NotdoneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'partenaire_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/nonpayerInventaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_done' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireRController::doneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/payerInventaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_nonpaye' => array (  0 =>   array (    0 => 'id',    1 => 'partenaire_id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireController::nonpayerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'partenaire_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/nonpayerInventaires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaire_paye' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireController::payerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/payerInventaires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commission_read' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CommissionController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/readCommission',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comission_pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CommissionController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/pdfCommission',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inventaireR_read' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\InventaireRController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/readInventaireR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commissionR_read' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CommissionRController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/readCommissionR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commissionR_pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\CommissionRController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/pdfComm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'changer_mdp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::rendermdpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/changermdp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'confirm_mdp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Utilisateurs\\UtilisateursBundle\\Controller\\PartenaireController::changermdpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/confirmmdp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnement_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnement/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_create_abonnement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\AbonnementController::CreateAbonnementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnement/CreateAbonnement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_read_abonnement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\AbonnementController::ReadAbonnementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnement/ReadAbonnement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_update_abonnement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\AbonnementController::UpdateAbonnementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/abonnement/UpdateAbonnement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_delete_abonnement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\AbonnementController::DeleteAbonnementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/abonnement/DeleteAbonnement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_create_promotion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\PromotionController::CreatePromotionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnement/CreatePromotion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_update_promotion' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\PromotionController::UpdatePromotionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/abonnement/UpdatePromotion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_delete_promotion' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\PromotionController::DeletePromotionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/abonnement/DeletePromotion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_read_promotion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AbonnementBundle\\Controller\\PromotionController::ReadPromotionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnement/ReadPromotion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::inboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_sent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::sentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_deleted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deletedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/deleted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::newThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_delete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_undelete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::undeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/undelete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_view' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::threadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    1 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
